{"version":3,"sources":["js/module/component.js","js/components/Counter.js","js/new-game.js"],"names":["Component","state","actions","Object","defineProperty","enumerable","name","callback","push","value","self","forEach","render","Counter","el","innerText","main","container","document","querySelector","console","error","counter","addAction","context","addEventListener","e","target","closest","dispatch","href","window"],"mappings":"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","file":"new-game.a2893f9e.js","sourceRoot":"../src","sourcesContent":["class Component {\n  constructor({ state }) {\n    this.state = state;\n    this.actions = {};\n\n    Object.defineProperty(this, 'state', {\n      enumerable: false,\n    });\n  }\n\n  render() {}\n\n  addAction(name, callback) {\n    if (!this.actions[name]) {\n      this.actions[name] = [];\n    }\n\n    this.actions[name].push(callback);\n    return this;\n  }\n\n  dispatch(name, value) {\n    if (!this.actions[name]) {\n      return;\n    }\n\n    const self = this;\n\n    this.actions[name].forEach((callback) => {\n      callback(self, value);\n      self.render(self.state);\n    });\n    return this;\n  }\n}\n\nexport default Component;\n","import Component from '../module/component';\n\nclass Counter extends Component {\n  constructor({ el, state }) {\n    super({ state });\n\n    this.el = el;\n  }\n\n  render(state) {\n    this.el.innerText = state;\n  }\n}\n\nexport default Counter;\n","import Counter from './components/Counter';\n\nfunction main() {\n  const container = document.querySelector('.container.digit-selector');\n\n  if (!container) {\n    console.error(`Not found container`);\n    return;\n  }\n\n  const counter = new Counter({ el: container.querySelector('#digit-number'), state: 0 });\n\n  counter\n    .addAction('increase', (context, value) => {\n      context.state += value;\n    })\n    .addAction('decrease', (context, value) => {\n      context.state -= context.state === 0 ? 0 : value;\n    })\n    .render(0);\n\n  container.addEventListener('click', (e) => {\n    const target = e.target;\n\n    if (target.closest('#minus-btn')) {\n      counter.dispatch('decrease', 1);\n    }\n\n    if (target.closest('#plus-btn')) {\n      counter.dispatch('increase', 1);\n    }\n\n    if (target.closest('#start-btn')) {\n      target.closest('#start-btn').href = `./game.html?digit=${counter.state}`;\n    }\n  });\n}\n\nwindow.addEventListener('DOMContentLoaded', main);\n"]}